<h1>Directorio/Organigrama de grupos y usuarios</h1>

<% 

  def unusuario(u, mens = '')
    r = "<li><i class='fa fa-user'></i>\n " +
      "#{CGI::escapeHTML(u.presenta_nombre)} " +
      "<a href='mailto:#{CGI::escapeHTML(u.email)}'>" +
      "<i class='fa fa-envelope'></i></a>\n " 
    if u.oficina
      r << "Of: #{CGI::escapeHTML(u.oficina.nombre)}. "
    end
    if u.extension
      r << "Ext: #{CGI::escapeHTML(u.extension)}. " 
    end
    if ApplicationHelper.supergrupos_usuario(u).include?('Externos')
      r << " Externo. "
    end
    r << mens
    r << "</li>"
    return r
  end

  def genera_nivel(ng, gruposya)
    r = ''
    ng.each do |g|
      #byebug
      if gruposya.include?(g.id)
        next
      end
      gruposya<<g.id
      r << "<li><i class='fa fa-group'></i> #{CGI::escapeHTML(g.nombre)}</li>\n"
      subnivel = Sip::Grupo.where(
        'id IN (SELECT subgrupo_id FROM grupo_subgrupo WHERE grupo_id=?)', 
        g.id).where('fechadeshabilitacion IS NULL').
        reorder(:nombre)
      usnivel = ::Usuario.where(
        'id in (SELECT usuario_id FROM sip_grupo_usuario WHERE sip_grupo_id=?)', 
        g.id).
        where('fechadeshabilitacion IS NULL').
        reorder(:nombres, :apellidos)
      if subnivel.count>0 || usnivel.count>0
        r << "<ul>\n"
        r << genera_nivel(subnivel, gruposya)
        usnivel.each do |u|
          r << unusuario(u)
        end
        r << "</ul>\n"
      end
    end
    return r
  end

  ad = ""
  nivelcero = Sip::Grupo.where(
    "id NOT IN (SELECT subgrupo_id FROM grupo_subgrupo) " ).
    where('fechadeshabilitacion IS NULL').reorder(:nombre)
  if nivelcero.count == 0
    ad << "<p>Problema: No hay grupos sin supragrupos</p>"
  elsif nivelcero.count > 2 || nivelcero[0].nombre != 'Desactivados' ||
    nivelcero[1].nombre != 'Usuarios'
    ad << "<p>Problema: Los únicos grupos sin supragrupos deberían ser Usuarios y Desactivados, pero se ven #{nivelcero.map(&:nombre).inspect}</p>"
  end

  primernivel = Sip::Grupo.where(
    "id IN (SELECT subgrupo_id FROM grupo_subgrupo WHERE grupo_id IN (SELECT id FROM sip_grupo WHERE cn = 'Usuarios')) " +
    "AND cn<>'Desactivados' AND cn<>'Externos'").
    where('fechadeshabilitacion IS NULL').
    reorder(:nombre)
  ad << genera_nivel(primernivel, [])
  ussingrupo = ::Usuario.where(
    'id NOT in (SELECT usuario_id FROM sip_grupo_usuario)').
    where('fechadeshabilitacion IS NULL').
    reorder(:nombres, :apellidos)
  ussingrupo.each do |u|
    ad << unusuario(u, 'SIN GRUPO. ')
  end

%>
<ul>
  <%= ad.html_safe %>
</ul>
  

